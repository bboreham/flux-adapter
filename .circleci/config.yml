version: 2
jobs:
  build:
    working_directory: ~/flux
    machine: true
    environment:
      GO_VERSION: 1.12.5
      # We don't need a GOPATH but CircleCI defines it, so we override it
      GOPATH: /home/circleci/go
      PATH: /bin:/usr/bin:/usr/local/go/bin:/home/circleci/go/bin
    steps:
      - checkout
      - run:
          name: Install Golang
          command: |
            curl -OL https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
            tar -xf go${GO_VERSION}.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo mv go /usr/local
            mkdir -p "$HOME/go/bin"
            go version
      - run:
          name: Update packages and Start Memcached
          command: |
            # These repos fail and we don't need them:
            sudo rm /etc/apt/sources.list.d/circleci_trusty.list /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y git rng-tools docker-ce
            git version
            docker version
      - restore_cache:
          keys:
            - go-build-{{ .Branch }}-{{ .Revision }}
            - go-build-{{ .Branch }}-
            - go-build-
      - restore_cache:
          keys:
            - go-modules-{{ checksum "go.mod" }}
            - go-modules-
#      - run: make test TEST_FLAGS="-race -tags integration -timeout 60s"
      - run: make all
      - save_cache:
          key: go-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/.cache/go-build/"
      - save_cache:
          key: go-modules-{{ checksum "go.sum" }}
          paths:
            - "~/go/pkg/mod/"
      # - deploy:
      #     name: Maybe push prerelease images
      #     command: |
      #       if [ -z "${CIRCLE_TAG}" -a "${CIRCLE_BRANCH}" == "master" ]; then
      #         echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin
      #         docker tag "docker.io/weaveworks/flux:$(docker/image-tag)" "docker.io/weaveworks/flux-adapter-prerelease:$(docker/image-tag)"
      #         docker push "docker.io/weaveworks/flux-prerelease:$(docker/image-tag)"
      #       fi
      # - deploy:
      #     name: Maybe push release image and upload binaries
      #     command: |
      #       if echo "${CIRCLE_TAG}" | grep -Eq "^[0-9]+(\.[0-9]+)*(-[a-z]+)?$"; then
      #         echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USER" --password-stdin
      #         docker push "docker.io/weaveworks/flux-adapter:${CIRCLE_TAG}"
      #       fi

workflows:
  version: 2
  build-and-push:
    jobs:
      - build:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*(-[a-z]+)?/
